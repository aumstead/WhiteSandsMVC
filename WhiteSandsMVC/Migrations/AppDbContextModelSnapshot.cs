// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WhiteSandsMVC.Models;

namespace WhiteSandsMVC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WhiteSandsMVC.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Adults")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Children")
                        .HasColumnType("tinyint");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<string>("Promo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("WhiteSandsMVC.Models.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfirmEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CreditCardExpiryMonth")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CreditCardExpiryYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CreditCardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NameOnCreditCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("SubscribedToEmailList")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("WhiteSandsMVC.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<string>("View")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoomNumber = "1",
                            RoomTypeId = 1,
                            View = "Lagoon"
                        },
                        new
                        {
                            Id = 2,
                            RoomNumber = "2",
                            RoomTypeId = 1,
                            View = "Lagoon"
                        },
                        new
                        {
                            Id = 3,
                            RoomNumber = "3",
                            RoomTypeId = 1,
                            View = "Mt. Suthep"
                        },
                        new
                        {
                            Id = 4,
                            RoomNumber = "4",
                            RoomTypeId = 1,
                            View = "Mt. Suthep"
                        },
                        new
                        {
                            Id = 5,
                            RoomNumber = "5",
                            RoomTypeId = 2,
                            View = "Lagoon"
                        },
                        new
                        {
                            Id = 6,
                            RoomNumber = "6",
                            RoomTypeId = 2,
                            View = "Mt. Suthep"
                        },
                        new
                        {
                            Id = 7,
                            RoomNumber = "7",
                            RoomTypeId = 3,
                            View = "Lagoon"
                        },
                        new
                        {
                            Id = 8,
                            RoomNumber = "8",
                            RoomTypeId = 3,
                            View = "Mt. Suthep"
                        },
                        new
                        {
                            Id = 9,
                            RoomNumber = "100",
                            RoomTypeId = 4,
                            View = "Beach"
                        },
                        new
                        {
                            Id = 10,
                            RoomNumber = "201",
                            RoomTypeId = 4,
                            View = "Beach"
                        },
                        new
                        {
                            Id = 11,
                            RoomNumber = "302",
                            RoomTypeId = 4,
                            View = "Garden"
                        },
                        new
                        {
                            Id = 12,
                            RoomNumber = "402",
                            RoomTypeId = 4,
                            View = "Garden"
                        },
                        new
                        {
                            Id = 13,
                            RoomNumber = "102",
                            RoomTypeId = 5,
                            View = "Beach"
                        },
                        new
                        {
                            Id = 14,
                            RoomNumber = "500",
                            RoomTypeId = 5,
                            View = "Beach"
                        },
                        new
                        {
                            Id = 15,
                            RoomNumber = "501",
                            RoomTypeId = 5,
                            View = "Garden"
                        },
                        new
                        {
                            Id = 16,
                            RoomNumber = "600",
                            RoomTypeId = 5,
                            View = "Garden"
                        },
                        new
                        {
                            Id = 17,
                            RoomNumber = "Paris",
                            RoomTypeId = 8,
                            View = "Mt. Suthep"
                        },
                        new
                        {
                            Id = 18,
                            RoomNumber = "New York",
                            RoomTypeId = 8,
                            View = "Mt.Suthep"
                        },
                        new
                        {
                            Id = 19,
                            RoomNumber = "Tokyo",
                            RoomTypeId = 7,
                            View = "Beach"
                        },
                        new
                        {
                            Id = 20,
                            RoomNumber = "London",
                            RoomTypeId = 7,
                            View = "Beach"
                        },
                        new
                        {
                            Id = 21,
                            RoomNumber = "Rome",
                            RoomTypeId = 6,
                            View = "Beach"
                        },
                        new
                        {
                            Id = 22,
                            RoomNumber = "Amsterdam",
                            RoomTypeId = 6,
                            View = "Beach"
                        },
                        new
                        {
                            Id = 23,
                            RoomNumber = "Cairo",
                            RoomTypeId = 6,
                            View = "Beach"
                        });
                });

            modelBuilder.Entity("WhiteSandsMVC.Models.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Bathroom")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Beds")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("ExtraBeds")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte>("MaxAdultCapacity")
                        .HasColumnType("tinyint");

                    b.Property<byte>("MaxChildCapacity")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Occupancy")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("RoomSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bathroom = "One full bathroom",
                            Beds = "One king bed. One full sofa bed",
                            Category = 0,
                            ExtraBeds = "One full sofa bed",
                            Location = "Overwater bungalow",
                            MaxAdultCapacity = (byte)3,
                            MaxChildCapacity = (byte)2,
                            Name = "One-bedroom beach-view overwater bungalow",
                            Occupancy = "3 adults or 2 adults and 2 children (up to the age of 12)",
                            PhotoPath = "bungalow1.jpg",
                            Price = 300m,
                            RoomSize = "100 m2 (1,080 sq.ft.)"
                        },
                        new
                        {
                            Id = 2,
                            Bathroom = "Two full bathrooms",
                            Beds = "Two king beds. Two full sofa beds",
                            Category = 0,
                            ExtraBeds = "Two full sofa beds",
                            Location = "Overwater bungalow",
                            MaxAdultCapacity = (byte)6,
                            MaxChildCapacity = (byte)4,
                            Name = "Two-bedroom overwater bungalow suite",
                            Occupancy = "6 adults or 2 adults and 4 children (up to the age of 12)",
                            PhotoPath = "bungalow2.jpg",
                            Price = 500m,
                            RoomSize = "207 m2 (2,228 sq.ft.)"
                        },
                        new
                        {
                            Id = 3,
                            Bathroom = "Two full bathrooms",
                            Beds = "One king bed and two queen beds. Two full sofa beds",
                            Category = 0,
                            ExtraBeds = "Two full sofa beds",
                            Location = "Overwater bungalow",
                            MaxAdultCapacity = (byte)6,
                            MaxChildCapacity = (byte)4,
                            Name = "Two-bedroom overwater bungalow suite with plunge pool",
                            Occupancy = "6 adults or 2 adults and 4 children (up to the age of 12)",
                            PhotoPath = "bungalow3.jpg",
                            Price = 600m,
                            RoomSize = "207 m2 (2,228 sq.ft.)"
                        },
                        new
                        {
                            Id = 4,
                            Bathroom = "One full bathroom",
                            Beds = "One king bed. One rollaway",
                            Category = 1,
                            ExtraBeds = "One rollaway",
                            Location = "Floors 1-4",
                            MaxAdultCapacity = (byte)2,
                            MaxChildCapacity = (byte)1,
                            Name = "Deluxe beachfront room",
                            Occupancy = "2 adults or 2 adults and 1 child (up to the age of 12)",
                            PhotoPath = "beachfront1.jpg",
                            Price = 300m,
                            RoomSize = "59 m2 (640 sq.ft.)"
                        },
                        new
                        {
                            Id = 5,
                            Bathroom = "Two full bathrooms",
                            Beds = "One king bed. One full sofa bed",
                            Category = 2,
                            ExtraBeds = "One full sofa bed",
                            Location = "Floors 1, 5-6",
                            MaxAdultCapacity = (byte)3,
                            MaxChildCapacity = (byte)2,
                            Name = "Beachfront one-bedroom suite",
                            Occupancy = "3 adults or 2 adults and 2 children (up to the age of 12)",
                            PhotoPath = "beachfront2.jpg",
                            Price = 450m,
                            RoomSize = "130 m2 (1,400 sq.ft.)"
                        },
                        new
                        {
                            Id = 6,
                            Bathroom = "Two full bathrooms and one-half bathroom",
                            Beds = "Two king and two queen beds",
                            Category = 3,
                            ExtraBeds = "One rollaway",
                            Location = "Secluded, with pedestrian access to beach and main building",
                            MaxAdultCapacity = (byte)6,
                            MaxChildCapacity = (byte)4,
                            Name = "Three-bedroom villa estate with plunge pool",
                            Occupancy = "6 adults or 2 adults and 4 children (up to the age of 12)",
                            PhotoPath = "villa1.jpg",
                            Price = 1200m,
                            RoomSize = "500 m2 (5,380 sq.ft.)"
                        },
                        new
                        {
                            Id = 7,
                            Bathroom = "Two full bathrooms",
                            Beds = "One king and two queen beds. One full sofa bed",
                            Category = 3,
                            ExtraBeds = "One full sofa bed",
                            Location = "Beachfront, with pedestrian access to main building",
                            MaxAdultCapacity = (byte)5,
                            MaxChildCapacity = (byte)3,
                            Name = "Two-bedroom beachfront villa estate",
                            Occupancy = "5 adults or 2 adults and 3 children (up to the age of 12)",
                            PhotoPath = "villa2.jpg",
                            Price = 900m,
                            RoomSize = "300 m2 (3,228 sq.ft.)"
                        },
                        new
                        {
                            Id = 8,
                            Bathroom = "One full bathroom and one-half bathroom",
                            Beds = "One king bed. One full sofa bed",
                            Category = 3,
                            ExtraBeds = "One full sofa bed",
                            Location = "Beachfront, with pedestrian access to main building",
                            MaxAdultCapacity = (byte)3,
                            MaxChildCapacity = (byte)2,
                            Name = "One-bedroom beachfront villa estate",
                            Occupancy = "3 adults or 2 adults and 2 children (up to the age of 12)",
                            PhotoPath = "villa3.jpg",
                            Price = 600m,
                            RoomSize = "253 m2 (2,722 sq.ft.)"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
